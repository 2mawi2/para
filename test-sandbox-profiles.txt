Test both sandbox profiles (permissive and restrictive) to ensure they work correctly on macOS:

1. Test permissive profile:
   - Create a test session with `para start test-permissive --sandbox --sandbox-profile permissive`
   - Verify that Claude CLI launches successfully
   - Try to read files from the project directory (should work)
   - Try to write files to the project directory (should work)
   - Try to write files outside project directory to /tmp (should work)
   - Try to write to home directory outside allowed paths like ~/.ssh (should fail)
   - Try network access (should work)
   - Use `para finish "Test permissive profile"` when done

2. Test restrictive profile:
   - Create a test session with `para start test-restrictive --sandbox --sandbox-profile restrictive`
   - Verify that Claude CLI launches successfully
   - Try to read files from the project directory (should work)
   - Try to write files to the project directory (should work)
   - Try to write files to /tmp (should work)
   - Try to write to home directory paths like ~/.cargo or ~/.rustup (should fail)
   - Try network access (should work - needed for Claude API)
   - Use `para finish "Test restrictive profile"` when done

3. Test error handling:
   - Try using an invalid profile name like `para start test-invalid --sandbox --sandbox-profile invalid-profile`
   - Should show appropriate error message

For each test, report:
- Whether Claude CLI launched successfully
- What operations succeeded/failed as expected
- Any unexpected behavior or errors
- The exact error messages when operations are blocked

Note: The sandboxing uses macOS's built-in sandbox-exec command with Seatbelt profiles.