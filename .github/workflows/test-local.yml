name: Test Local

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure Git and Environment
      run: |
        # Configure git properly for CI environment
        git config --global user.email "test@example.com"
        git config --global user.name "GitHub Actions"
        git config --global init.defaultBranch main
        git config --global core.autocrlf false
        git config --global core.filemode false
        git config --global advice.detachedHead false
        
        # Ensure we have proper permissions
        umask 022
        
        # Set environment variables for para
        echo "IDE_NAME=cursor" >> $GITHUB_ENV
        echo "IDE_CMD=echo" >> $GITHUB_ENV
        echo "CURSOR_CMD=echo" >> $GITHUB_ENV
        echo "PARA_NON_INTERACTIVE=true" >> $GITHUB_ENV
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck bats
    
    - name: Install dependencies (macOS)  
      if: runner.os == 'macOS'
      run: |
        brew install shellcheck bats-core shfmt
    
    - name: Run shellcheck
      run: |
        shellcheck -e SC1091,SC2086 para.sh install-para.sh lib/*.sh
    
    - name: Debug test environment
      run: |
        echo "üîç Debug info:"
        echo "Runner OS: ${{ runner.os }}"
        echo "Current directory: $(pwd)"
        echo "Current user: $(whoami)"
        echo "Umask: $(umask)"
        echo "Git version: $(git --version)"
        echo "IDE_NAME: ${IDE_NAME:-unset}"
        echo "IDE_CMD: ${IDE_CMD:-unset}"
        echo "PARA_NON_INTERACTIVE: ${PARA_NON_INTERACTIVE:-unset}"
        echo "Available disk space:"
        df -h . || df -h /
        echo "Temporary directory permissions:"
        ls -la /tmp | head -5
        echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE:-unset}"
    
    - name: Test simple para execution
      env:
        IDE_NAME: cursor
        IDE_CMD: echo
        CURSOR_CMD: echo
        PARA_NON_INTERACTIVE: true
      run: |
        echo "üß™ Testing basic para functionality..."
        
        # Create a minimal test repo
        TEST_REPO=$(mktemp -d)
        echo "Test repo: $TEST_REPO"
        cd "$TEST_REPO"
        
        # Setup git repo
        git init
        git config user.email "test@example.com" 
        git config user.name "Test User"
        echo "test content" > test-file.py
        git add test-file.py
        git commit -m "Initial commit"
        
        echo "Git repo setup complete"
        echo "Repository contents:"
        ls -la
        echo "Git status:"
        git status
        
        # Get absolute path to para.sh
        PARA_SCRIPT="${GITHUB_WORKSPACE:-$(pwd)/..}/para.sh"
        echo "Para script location: $PARA_SCRIPT"
        ls -la "$PARA_SCRIPT" || echo "Para script not found!"
        
        # Try to run para with debug output
        echo "Attempting to run para start..."
        echo "Environment variables:"
        echo "  IDE_NAME=$IDE_NAME"
        echo "  IDE_CMD=$IDE_CMD"
        echo "  CURSOR_CMD=$CURSOR_CMD"
        echo "  PARA_NON_INTERACTIVE=$PARA_NON_INTERACTIVE"
        
        set -x  # Enable debug output
        if PARA_NON_INTERACTIVE=true IDE_CMD="echo" IDE_NAME="cursor" "$PARA_SCRIPT" start 2>&1; then
          echo "‚úÖ Para start succeeded!"
          echo "Created directories:"
          find . -type d -name "*pc*" 2>/dev/null || echo "No pc directories found"
          echo "State files:"
          find . -name "*.state" 2>/dev/null || echo "No state files found"
          echo "Subtrees directory:"
          ls -la subtrees/ 2>/dev/null || echo "No subtrees directory"
        else
          EXIT_CODE=$?
          echo "‚ùå Para start failed with exit code: $EXIT_CODE"
          echo "Directory contents after failure:"
          ls -la
          echo "Git logs:"
          git log --oneline || true
          echo "Para script permissions:"
          ls -la "$PARA_SCRIPT"
        fi
        set +x  # Disable debug output
        
        cd "${GITHUB_WORKSPACE:-$(pwd)/..}"
        rm -rf "$TEST_REPO"
    
    - name: Test basic para help
      env:
        IDE_NAME: cursor
        IDE_CMD: echo
        PARA_NON_INTERACTIVE: true
      run: |
        echo "üß™ Testing para help command..."
        PARA_NON_INTERACTIVE=true ./para.sh --help || PARA_NON_INTERACTIVE=true ./para.sh help || echo "Help command failed" 