name: Gardener - Technical Debt Remediation

on:
  push:
    branches:
      - main
    paths:
      - 'tasks/gardener-backlog/**'

jobs:
  work-on-task:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install just
        uses: extractions/setup-just@v2


      - name: Identify new task
        id: task
        run: |
          # Find the task file that was added in this commit
          added_files=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
          task_file=$(echo "$added_files" | grep "^tasks/gardener-backlog/.*\.md$" | head -1)
          
          if [ -z "$task_file" ]; then
            echo "No task file found in commit"
            echo "skip_work=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Task file: $task_file"
          
          # Extract components for branch naming
          task_basename=$(basename "$task_file" .md)
          # Remove timestamp prefix (assuming format: timestamp-description)
          branch_suffix=$(echo "$task_basename" | sed 's/^[0-9]*-//')
          branch_name="gardener/$branch_suffix"
          
          # Generate session name from task
          session_name=$(echo "$branch_suffix" | sed 's/-/_/g')
          
          echo "task_file=$task_file" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT  
          echo "session_name=$session_name" >> $GITHUB_OUTPUT
          echo "skip_work=false" >> $GITHUB_OUTPUT

      - name: Create feature branch
        if: steps.task.outputs.skip_work != 'true'
        run: |
          git checkout -b "${{ steps.task.outputs.branch_name }}"
          git push -u origin "${{ steps.task.outputs.branch_name }}"

      - name: Read task file
        if: steps.task.outputs.skip_work != 'true'
        id: read_task
        run: |
          task_content=$(cat "${{ steps.task.outputs.task_file }}")
          echo "task_content<<EOF" >> $GITHUB_OUTPUT
          echo "$task_content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Execute task with Claude
        if: steps.task.outputs.skip_work != 'true'
        uses: grll/claude-code-action@beta
        with:
          use_oauth: true
          claude_access_token: ${{ secrets.CLAUDE_ACCESS_TOKEN }}
          claude_refresh_token: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          claude_expires_at: ${{ secrets.CLAUDE_EXPIRES_AT }}
          direct_prompt: |
            Please complete the following technical debt remediation task:

            ${{ steps.read_task.outputs.task_content }}

            Important instructions:
            1. Work on the current branch: ${{ steps.task.outputs.branch_name }}
            2. Read the task file carefully and follow all requirements
            3. After making changes, run `just test` to ensure all tests pass
            4. Run `just lint` to ensure code quality
            5. When complete, commit your changes with: git add -A && git commit -m "refactor: Replace unwrap in ${{ steps.task.outputs.session_name }}"
            6. Do NOT run `para finish` - just commit the changes directly

            Focus on the specific file mentioned in the task and ensure high-quality, well-tested code.
          allowed_tools: "Edit,Read,Write,Glob,Grep,Bash"
          timeout_minutes: "30"

      - name: Verify work completion
        if: steps.task.outputs.skip_work != 'true'
        run: |
          # Check if the agent created a commit
          if [ $(git rev-list --count HEAD ^origin/main) -eq 0 ]; then
            echo "No commits found - agent may not have completed work"
            exit 1
          fi
          
          # Run tests to verify the fix
          just test || {
            echo "Tests failed after agent work"
            exit 1
          }

      - name: Create pull request
        if: steps.task.outputs.skip_work != 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "ðŸŒ¿ Gardener Fix for: ${{ steps.task.outputs.task_file }}"
          body: |
            ## ðŸŒ¿ Gardener Automated Fix
            
            This PR contains an automated fix generated by the Gardener workflow.
            
            **Original task:** `${{ steps.task.outputs.task_file }}`
            **Branch:** `${{ steps.task.outputs.branch_name }}`
            **Session:** `${{ steps.task.outputs.session_name }}`
            
            ## ðŸ”§ Work Performed
            The agent was dispatched to work on the technical debt task and has:
            - Analyzed the specified file(s)
            - Implemented the requested changes
            - Ensured all tests pass
            - Followed code quality standards
            
            ## âœ… Verification
            - Tests pass: `just test` âœ“
            - Code quality: `just lint` âœ“
            - Changes committed via `para finish` âœ“
            
            ## ðŸ“‹ Next Steps
            Please review the changes and merge if they meet your standards.
            
            ---
            *This PR was created automatically by the Gardener workflow*
          branch: ${{ steps.task.outputs.branch_name }}
          base: main