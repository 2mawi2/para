name: Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure Git and Environment
      run: |
        # Configure git properly for CI environment
        git config --global user.email "test@example.com"
        git config --global user.name "GitHub Actions"
        git config --global init.defaultBranch main
        git config --global core.autocrlf false
        git config --global core.filemode false
        git config --global advice.detachedHead false
        
        # Ensure we have proper permissions
        umask 022
        
        # Set environment variables for para
        echo "IDE_NAME=cursor" >> $GITHUB_ENV
        echo "IDE_CMD=echo" >> $GITHUB_ENV
        echo "CURSOR_CMD=echo" >> $GITHUB_ENV
        echo "PARA_NON_INTERACTIVE=true" >> $GITHUB_ENV
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck bats
    
    - name: Install dependencies (macOS)  
      if: runner.os == 'macOS'
      run: |
        brew install shellcheck bats-core shfmt
    
    - name: Run shellcheck
      run: |
        shellcheck -e SC1091,SC2086 para.sh install-para.sh lib/*.sh
    
    - name: Run shfmt check
      if: runner.os == 'macOS'
      run: |
        shfmt -d -i 2 para.sh install-para.sh lib/*.sh
    
    - name: Debug test environment
      run: |
        echo "üîç Debug info:"
        echo "Current directory: $(pwd)"
        echo "Current user: $(whoami)"
        echo "Umask: $(umask)"
        echo "Git version: $(git --version)"
        echo "IDE_NAME: ${IDE_NAME:-unset}"
        echo "IDE_CMD: ${IDE_CMD:-unset}"
        echo "PARA_NON_INTERACTIVE: ${PARA_NON_INTERACTIVE:-unset}"
        echo "Available disk space:"
        df -h .
    
    - name: Run tests
      env:
        IDE_NAME: cursor
        IDE_CMD: echo
        CURSOR_CMD: echo
        PARA_NON_INTERACTIVE: true
      run: |
        echo "üß™ Running all para tests..."
        
        # Run each test suite separately with better error handling
        echo "Running unit tests..."
        bats tests/test_para_units.bats
        
        echo "Running prompt feature tests..."
        bats tests/test_para_prompt_features.bats
        
        echo "Running argument parsing tests..."
        bats tests/test_para_argument_parsing.bats
        
        echo "Running friendly names tests..."
        bats tests/test_friendly_names.bats
        
        echo "Running integration tests..."
        bats tests/test_para_integration.bats
        
        echo "‚úÖ All tests passed!"
    
    - name: Test installation
      env:
        PARA_NON_INTERACTIVE: true
      run: |
        echo "üß™ Testing installation..."
        ./install-para.sh
        
        # Test that para is available
        export PATH="$HOME/.local/bin:$PATH"
        which para
        PARA_NON_INTERACTIVE=true para --help 