name: CI Tests (Rust + TypeScript)

on:
  push:
    branches: [ "main", "release" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: |
      (github.event_name == 'push') ||
      (github.event_name == 'pull_request')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0
    
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: stable
        cache: true
        components: clippy, rustfmt
    
    - name: Install system dependencies
      run: |
        if [ "$RUNNER_OS" = "macOS" ]; then
          echo "macOS runner setup complete"
        elif [ "$RUNNER_OS" = "Linux" ]; then
          echo "Ubuntu runner setup complete"
        fi
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Setup Node.js (fallback)
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Check Rust formatting
      run: cargo fmt --all -- --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Run Tests
      run: |
        # Set environment variables for consistent testing across platforms
        export RUST_BACKTRACE=1
        export CARGO_TERM_COLOR=always
        
        # Run tests with proper timeout handling per platform
        if [ "$RUNNER_OS" = "Linux" ]; then
          timeout 600 cargo test --verbose --all-features || (
            echo "Tests failed or timed out. Retrying with reduced parallelism..."
            timeout 600 cargo test --verbose --all-features --jobs=1
          )
        else
          # macOS doesn't have timeout, use gtimeout if available or just run normally
          if command -v gtimeout >/dev/null 2>&1; then
            gtimeout 600 cargo test --verbose --all-features || (
              echo "Tests failed or timed out. Retrying with reduced parallelism..."
              gtimeout 600 cargo test --verbose --all-features --jobs=1
            )
          else
            cargo test --verbose --all-features || (
              echo "Tests failed. Retrying with reduced parallelism..."
              cargo test --verbose --all-features --jobs=1
            )
          fi
        fi

    - name: Test Binary Functionality
      run: |
        # Build and test basic functionality
        cargo build --release
        ./target/release/para --help
        ./target/release/para --version
    
    - name: Install TypeScript dependencies
      working-directory: mcp-server-ts
      run: |
        if command -v bun >/dev/null 2>&1; then
          echo "Using bun for TypeScript dependencies"
          bun install
        else
          echo "Using npm for TypeScript dependencies"
          npm install
        fi
    
    - name: Build TypeScript MCP server
      working-directory: mcp-server-ts
      run: |
        if command -v bun >/dev/null 2>&1; then
          bun run build
        else
          npm run build
        fi
    
    - name: Run TypeScript tests
      working-directory: mcp-server-ts
      run: |
        if command -v bun >/dev/null 2>&1; then
          bun run test
        else
          npm run test
        fi
    
    - name: Run TypeScript linting
      working-directory: mcp-server-ts
      run: |
        if command -v bun >/dev/null 2>&1; then
          bun run lint
        else
          npm run lint
        fi